<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <script src="https://unpkg.com/ag-grid-community/dist/ag-grid-community.min.noStyle.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/ag-grid-community/dist/styles/ag-grid.css">
    <link rel="stylesheet" href="https://unpkg.com/ag-grid-community/dist/styles/ag-theme-balham.css">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <style type="text/css">
    .ag-theme-balham .rag-red,
    .rag-red {
        background-color: lightcoral;
    }

    .ag-theme-balham .rag-green,
    .rag-green {
        background-color: lightgreen;
    }

    .ag-theme-balham .rag-amber,
    .rag-amber {
        background-color: lightsalmon;
    }

    .ag-header-cell-label .ag-header-cell-text {
        white-space: normal !important;
        text-align: center;
    }

    .input-group-prepend {
        width: 8em !important;
    }

    .form-control {
        text-align-last: center;
    }
    .legend-box-green {
        border: 1px solid seagreen;
        padding-left: 12px;
        padding-right: 12px;
    }
    .legend-box-red {
        border: 1px solid brown;
        padding-left: 12px;
        padding-right: 12px;
    }
    </style>
    <script type="text/javascript" charset="utf-8">
    const numberFormatter = (params) => {
        var number = parseFloat(params.value);

        if (isNaN(number))
            number = null;

        if (number != null)
            return number.toFixed(2);
        else
            return number;
    }

    const columnDefs = [

    // ordem: universidade (fixo), cidade, sua nota, nc 2020, diferença, 
        { headerName: 'Universidade', field: 'universidade', width: 120, pinned: 'left' }, 
        { headerName: 'Cidade', field: 'cidade' },
        
        { headerName: 'Nota de Corte 2020', field: 'corte2020', width: 130, type: "numericColumn", valueFormatter: numberFormatter, cellStyle: { textAlign: "center" }, hide: true },
        { headerName: 'Nota de corte 2019', field: 'corte2019', width: 130, type: "numericColumn", valueFormatter: numberFormatter, cellStyle: { textAlign: "center" } },        
        { headerName: 'Sua Nota', field: 'nota', width: 100, type: "numericColumn", valueFormatter: numberFormatter, cellStyle: { textAlign: "center" } },
        { headerName: 'Diferença', field: 'diferenca', width: 100, type: "numericColumn", valueFormatter: numberFormatter, sortingOrder: diferencaSorting, cellStyle: { textAlign: "center" } },
        { headerName: 'Nota de corte da última chamada', field: 'corteultimachamada', width: 130, type: "numericColumn", valueFormatter: numberFormatter, cellStyle: { textAlign: "center" } },
        { headerName: 'Vagas', field: 'vagas', width: 80, type: "numericColumn", cellStyle: { textAlign: "center" } }, // colocar nas últimas colunas        
        { headerName: 'Número da chamada', field: 'nrochamada', width: 95, type: "numericColumn", cellStyle: { textAlign: "center" } },
        { headerName: 'Posição na lista de espera', field: 'posicaolistaespera', width: 110, type: "numericColumn", cellStyle: { textAlign: "center" } },

    ];
    const gridOptions = {
        columnDefs: columnDefs,
        defaultColDef: {
            sortable: true
        },
        animateRows: true,
        sortingOrder: ['desc', 'asc'],
        rowClassRules: {
            'rag-green': 'data.diferenca != null && data.diferenca >= 0',
            'rag-red': 'data.corteultimachamada != \'\' && parseFloat(data.corteultimachamada) <= parseFloat(data.nota)',
            // 'rag-amber': 'data.corteultimachamada != "" && data.nota != "" && data.corteultimachamada <= data.nota'
        }
    };

    function diferencaSorting(o1, o2) {
        if (o1 == null || o2 == null || o1 == "" || o1 == "")
            return -1;

        return o1 > o2;
    }

    fetch('https://api.myjson.com/bins/179khk').then(function(response) {
        return response.json();
    }).then(function(data) {
        gridOptions.api.setRowData(data);
    });

    function calcularNota() {
        var itemsToUpdate = [];

        gridOptions.api.forEachNode(function(rowNode, index) {
            var data = rowNode.data;

            var l = parseFloat(document.forms[0]["l"].value.replace(",", ".")) * data.LC;
            var h = parseFloat(document.forms[0]["h"].value.replace(",", ".")) * data.CH;
            var n = parseFloat(document.forms[0]["n"].value.replace(",", ".")) * data.CN;
            var m = parseFloat(document.forms[0]["m"].value.replace(",", ".")) * data.MT;
            var r = parseFloat(document.forms[0]["r"].value.replace(",", ".")) * data.RD;
            var t = parseFloat(data.total);

            data.vagas = parseInt(data.vagas);
            data.nota = ((l + h + n + m + r) / t);
            
            console.log(data.corte2020);
            data.corte2020 = parseFloat(data.corte2020);

            if (isNaN(data.corte2020)) {
                data.corte2020 = null;
                data.diferenca = null;
            } else {
                data.diferenca = parseFloat(data.nota - data.corte2020);
            }

            // console.log("%s: LC: %f, CH: %f, CN: %f, MT: %f, RD: %f, SOMA_PESOS: %f", data.universidade ,l,h,n,m,r,t);

            itemsToUpdate.push(data);
        });
        gridOptions.api.setRowData(itemsToUpdate);
        // gridOptions.api.updateRowData({update: itemsToUpdate});

        var sort = [{ colId: 'diferenca', sort: 'desc' }];
        gridOptions.api.setSortModel(sort);
    }

    document.addEventListener("DOMContentLoaded", function() {
        var eGridDiv = document.querySelector('#myGrid');
        new agGrid.Grid(eGridDiv, gridOptions);
    });
    </script>
</head>

<body>
    <div class="container text-md-center">
        <h4>Quer saber onde você passaria em medicina na ampla concorrência?</h4>
        <br />
        <h6>Notas de corte atualizadas em: <font color="red" id="atualizacao">01/01/2020 às 00:25</font>
        </h6>
        <br />
        <h5>Informe suas notas</h5>
        <div class="container">
            <div class="row align-items-center">
                <div class="col align-self-center">
                    <form>
                        <div class="input-group mb-1">
                            <div class="input-group-prepend">
                                <span class="input-group-text w-100">Linguagens</span>
                            </div>
                            <div class="input-group-prepend">
                                <input name="l" value="651,20" type="text" class="form-control" placeholder="Informe sua nota" aria-label="Informe sua nota">
                            </div>
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-prepend">
                                <span class="input-group-text w-100">Humanas</span>
                            </div>
                            <div class="input-group-prepend">
                                <input name="h" value="731,11" type="text" class="form-control" placeholder="Informe sua nota" aria-label="Informe sua nota">
                            </div>
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-prepend">
                                <span class="input-group-text w-100">Natureza</span>
                            </div>
                            <div class="input-group-prepend">
                                <input name="n" value="703,17" type="text" class="form-control" placeholder="Informe sua nota" aria-label="Informe sua nota">
                            </div>
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-prepend">
                                <span class="input-group-text w-100">Matemática</span>
                            </div>
                            <div class="input-group-prepend">
                                <input name="m" value="824,26" type="text" class="form-control" placeholder="Informe sua nota" aria-label="Informe sua nota">
                            </div>
                        </div>
                        <div class="input-group mb-1">
                            <div class="input-group-prepend">
                                <span class="input-group-text w-100">Redação</span>
                            </div>
                            <div class="input-group-prepend">
                                <input name="r" value="980" type="text" class="form-control" placeholder="Informe sua nota" aria-label="Informe sua nota">
                            </div>
                        </div>
                        <div class="text-center m-3">
                            <input type="button" value="Simular SISU" onclick="calcularNota()" class="btn btn-primary">
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="row mb-1">
            <span class="rag-green legend-box-green"></span>
            <span class="ml-3 align-top">Sua nota está acima da nota de corte do SISU 2019</span>
        </div>
        <div class="row">
            <span class="rag-red legend-box-red"></span>
            <div class="ml-3">Sua nota está acima da nota de corte da última chamada do SISU 2019</div>
        </div>       
        <br />
        <div class="container mb-1">
            <div id="myGrid" style="height: 300px" class="ag-theme-balham align-self-center"></div>
        </div>
    </div>
</body>

</html>